export = CyclicItem;
declare class CyclicItem {
    static from_dynamo(d: any): CyclicItem | CyclicItemFragment;
    constructor(collection: any, key: any, props?: {}, opts?: {});
    collection: any;
    key: any;
    props: any;
    $index: any;
    indexes(): Promise<any[]>;
    fragments(): Promise<any[]>;
    delete(props?: {}, opts?: {}): Promise<boolean>;
    get(): Promise<CyclicItem | CyclicItemFragment>;
    set(props: any, opts?: {}): Promise<CyclicItem>;
    fragment(type: any, name?: string, props?: {}): CyclicItemFragment;
}
declare class CyclicItemFragment {
    static from_dynamo(d: any): CyclicItemFragment;
    constructor(type: any, key: any, props: any, parent: any, opts?: {});
    type: any;
    key: any;
    parent: any;
    props: any;
    $index: any;
    indexes(): Promise<any[]>;
    delete(props?: {}, opts?: {}): Promise<boolean>;
    set(props: any, opts?: {}): Promise<CyclicItemFragment>;
    get(): Promise<CyclicItemFragment | CyclicItemFragment[]>;
    list(): Promise<CyclicItemFragment[]>;
}
//# sourceMappingURL=cy_db_item.d.ts.map